name: Check Remote Kubernetes Clusters

on:
  push:
    branches:
      - master

jobs:
  check:
    runs-on: ubuntu-latest

    env:
      BASTION_HOST: 123.45.67.89      # ← IP bastion
      K8S_HOST: 192.168.1.10          # ← IP k8s
      K3S_HOST: 192.168.1.11          # ← IP k3s

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Check Clusters via Bastion
        id: check
        run: |
          set -e

          check_cluster() {
            HOST_IP=$1
            NAME=$2

            echo "Checking $NAME on $HOST_IP"

            # Выполняем через ssh-прыжок (через bastion jump_sa → хост root)
            ERRORS=$(ssh -o StrictHostKeyChecking=no \
              -o ProxyCommand="ssh -W %h:%p -o StrictHostKeyChecking=no jump_sa@${BASTION_HOST}" \
              root@${HOST_IP} \
              "kubectl get pods -A --no-headers | grep -E 'CrashLoopBackOff|Error|ImagePullBackOff|Pending|Unknown'" || true)

            if [[ -n \"$ERRORS\" ]]; then
              echo "::set-output name=slack_message::❌ Issues found on *$NAME*:\n\`\`\`\n$ERRORS\n\`\`\`"
              exit 1
            else
              echo "✅ $NAME cluster healthy."
            fi
          }

          check_cluster "$K8S_HOST" "K8s"
          check_cluster "$K3S_HOST" "K3s"

      - name: Send Slack Alert (on failure)
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "${{ steps.check.outputs.slack_message || '❌ Cluster health check failed. See logs for details.' }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

