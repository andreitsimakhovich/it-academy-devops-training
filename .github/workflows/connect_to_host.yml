name: Connect to Remote Host via Bastion

on:
  workflow_dispatch:  # –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —ç–∫—à–Ω –≤—Ä—É—á–Ω—É—é

jobs:
  connect:
    runs-on: ubuntu-latest

    steps:
      # –ù–∞—Å—Ç—Ä–æ–∏–º SSH
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é SSH –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ Bastion
      - name: Configure SSH
        run: |
          # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä—è–º–æ –≤ —Ñ–∞–π–ª–µ)
          BASTION_IP="178.124.206.53"        # –£–∫–∞–∂–∏—Ç–µ IP –≤–∞—à–µ–≥–æ Bastion —Å–µ—Ä–≤–µ—Ä–∞
          BASTION_USER="jump_sa"            # –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è Bastion
          BASTION_PORT="32510"              # –ü–æ—Ä—Ç –¥–ª—è Bastion —Å–µ—Ä–≤–µ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 22)
          REMOTE_HOST_IP="192.168.208.19"   # –£–∫–∞–∂–∏—Ç–µ IP —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞
          REMOTE_USER="root"                # –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞
          REMOTE_PORT="22"                  # –ü–æ—Ä—Ç –¥–ª—è —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 22)

          # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è SSH
          echo "Host bastion
          Hostname $BASTION_IP
          User $BASTION_USER
          Port $BASTION_PORT
          IdentityFile ~/.ssh/id_rsa" > ~/.ssh/config

          echo "Host remote-host
          Hostname $REMOTE_HOST_IP
          User $REMOTE_USER
          Port $REMOTE_PORT
          ProxyJump bastion" >> ~/.ssh/config

      # –î–æ–±–∞–≤–ª—è–µ–º Bastion –≤ known_hosts
      - name: Add bastion to known_hosts
        run: |
          # –î–æ–±–∞–≤–ª—è–µ–º Bastion –≤ known_hosts –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–∫–∏ "Host key verification failed"
          ssh-keyscan -p 32510 178.124.206.53 >> ~/.ssh/known_hosts

      # –î–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ö–æ—Å—Ç –≤ known_hosts —á–µ—Ä–µ–∑ Bastion
      - name: Add remote host to known_hosts via bastion
        run: |
          # –î–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ö–æ—Å—Ç –≤ known_hosts —á–µ—Ä–µ–∑ Bastion —Å–µ—Ä–≤–µ—Ä
          ssh -o StrictHostKeyChecking=no -p 32510 jump_sa@178.124.206.53 ssh-keyscan -p 22 192.168.208.19 >> ~/.ssh/known_hosts

      # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–º —Ö–æ—Å—Ç–µ —á–µ—Ä–µ–∑ Bastion
      - name: Connect to remote host via Bastion
        run: |
          # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —É–¥–∞–ª—ë–Ω–Ω–æ–º—É —Ö–æ—Å—Ç—É —á–µ—Ä–µ–∑ Bastion
          ssh -o StrictHostKeyChecking=no remote-host 'uptime'

      #- name: Check pods k8s
      #  run: |
      #    ssh -o StrictHostKeyChecking=no remote-host 'kubectl get pods -A' >> output.txt

      - name: Run kubectl and check pod statuses
        run: |
          # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ kubectl –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
           ssh -o StrictHostKeyChecking=no remote-host 'kubectl get pods -A' > pods_output.txt

          echo "=== –ü–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ kubectl ==="
          cat pods_output.txt

          echo "=== –ü–æ–¥—ã –Ω–µ –≤ —Å—Ç–∞—Ç—É—Å–µ Running ==="
          awk '$4 != "Running" && NR > 1' pods_output.txt > not_running_pods.txt || true
          cat not_running_pods.txt || echo "–í—Å–µ –ø–æ–¥—ã –≤ —Å—Ç–∞—Ç—É—Å–µ Running"
          
          # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π ‚Äî —à–ª—ë–º –≤ Slack
          if [ -s not_running_pods.txt ]; then
          echo "üö® –ù–∞–π–¥–µ–Ω—ã –ø–æ–¥—ã –Ω–µ –≤ —Å—Ç–∞—Ç—É—Å–µ Running. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Slack..."
          TEXT=$(cat not_running_pods.txt | sed 's/"/\\"/g' | awk '{printf "%s\\n", $0}')
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"*–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –ø–æ–¥—ã:*\n\`\`\`${TEXT}\`\`\`\"}" \
            ${{ secrets.SLACK_WEBHOOK }}
          fi      

      - name: Upload output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: script-output
          path: |
            pods_output.txt 
            not_running_pods.txt

